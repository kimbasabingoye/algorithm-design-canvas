/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AdminImport } from './routes/admin'
import { Route as IndexImport } from './routes/index'
import { Route as AdminIndexImport } from './routes/admin/index'
import { Route as AdminUsersImport } from './routes/admin/users'
import { Route as AdminCanvasesImport } from './routes/admin/canvases'
import { Route as AccountsSignupImport } from './routes/accounts/signup'
import { Route as AccountsSettingsImport } from './routes/accounts/settings'
import { Route as AccountsResetPasswordImport } from './routes/accounts/reset-password'
import { Route as AccountsRecoverPasswordImport } from './routes/accounts/recover-password'
import { Route as AccountsLoginImport } from './routes/accounts/login'

// Create/Update Routes

const AdminRoute = AdminImport.update({
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AdminIndexRoute = AdminIndexImport.update({
  path: '/',
  getParentRoute: () => AdminRoute,
} as any)

const AdminUsersRoute = AdminUsersImport.update({
  path: '/users',
  getParentRoute: () => AdminRoute,
} as any)

const AdminCanvasesRoute = AdminCanvasesImport.update({
  path: '/canvases',
  getParentRoute: () => AdminRoute,
} as any)

const AccountsSignupRoute = AccountsSignupImport.update({
  path: '/accounts/signup',
  getParentRoute: () => rootRoute,
} as any)

const AccountsSettingsRoute = AccountsSettingsImport.update({
  path: '/accounts/settings',
  getParentRoute: () => rootRoute,
} as any)

const AccountsResetPasswordRoute = AccountsResetPasswordImport.update({
  path: '/accounts/reset-password',
  getParentRoute: () => rootRoute,
} as any)

const AccountsRecoverPasswordRoute = AccountsRecoverPasswordImport.update({
  path: '/accounts/recover-password',
  getParentRoute: () => rootRoute,
} as any)

const AccountsLoginRoute = AccountsLoginImport.update({
  path: '/accounts/login',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      preLoaderRoute: typeof AdminImport
      parentRoute: typeof rootRoute
    }
    '/accounts/login': {
      preLoaderRoute: typeof AccountsLoginImport
      parentRoute: typeof rootRoute
    }
    '/accounts/recover-password': {
      preLoaderRoute: typeof AccountsRecoverPasswordImport
      parentRoute: typeof rootRoute
    }
    '/accounts/reset-password': {
      preLoaderRoute: typeof AccountsResetPasswordImport
      parentRoute: typeof rootRoute
    }
    '/accounts/settings': {
      preLoaderRoute: typeof AccountsSettingsImport
      parentRoute: typeof rootRoute
    }
    '/accounts/signup': {
      preLoaderRoute: typeof AccountsSignupImport
      parentRoute: typeof rootRoute
    }
    '/admin/canvases': {
      preLoaderRoute: typeof AdminCanvasesImport
      parentRoute: typeof AdminImport
    }
    '/admin/users': {
      preLoaderRoute: typeof AdminUsersImport
      parentRoute: typeof AdminImport
    }
    '/admin/': {
      preLoaderRoute: typeof AdminIndexImport
      parentRoute: typeof AdminImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  AdminRoute.addChildren([
    AdminCanvasesRoute,
    AdminUsersRoute,
    AdminIndexRoute,
  ]),
  AccountsLoginRoute,
  AccountsRecoverPasswordRoute,
  AccountsResetPasswordRoute,
  AccountsSettingsRoute,
  AccountsSignupRoute,
])

/* prettier-ignore-end */
